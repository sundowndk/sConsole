// #  <script language="JavaScript">
// #######################################################################################################################################
// # GLOBAL
// #######################################################################################################################################		
var mediatransformation =
{	
	// CREATE
	create : function ()
	{
		// CREATE			
		var create =	function ()
						{
							//var item = get ();
							
																					
							item = sorentoLib.mediaTransformation.new ();
							item.title = get ().title;
							sorentoLib.mediaTransformation.save (item);
							
							UI.elements.content.mediatransformations.addItem (item);
							
							modal.dispose ();
							
							mediatransformation.edit ({id: item.id});		
						};			
	
		// ONCHANGE
		var onChange =	function ()
						{
							if ((modal.getUIElement ("title").getAttribute ("value") != ""))
							{
								modal.getUIElement ("create").setAttribute ("disabled", false);
							}
							else
							{
								modal.getUIElement ("create").setAttribute ("disabled", true);
							}										
						};
						
		// GET
		var get =		function ()
						{
							var item = new Array ();							
							item.title = modal.getUIElement ("title").getAttribute ("value");
							return item;
						};

		// INIT
		var modal = new sConsole.modal.window ({SUIXML: "<%Write (SorentoLib.Services.Config.GetString ("sconsole", "url"))%>xml/media/mediatransformation_create.xml"});
						
		modal.getUIElement ("title").setAttribute ("onChange", onChange);		
		
		modal.getUIElement ("create").setAttribute ("onClick", create);
		modal.getUIElement ("close").setAttribute ("onClick", modal.dispose);		
		
		modal.show ();		
	},

	// EDIT
	edit : function (attributes)
	{				
		<%Include ("index_mediatransformation_mimetype_script.stpl")%>	
	
		if (!attributes) attributes = new Array ();
	
		if (!attributes.id)
		{
			attributes.current = sorentoLib.mediaTransformation.load (UI.elements.content.mediatransformations.getItem ().id);		
		}
		else
		{
			attributes.current = sorentoLib.mediaTransformation.load (attributes.id);
		}
					
		// SAVE
		var save = 		function ()
						{
							var item = get ();										
							sorentoLib.mediaTransformation.save (item);	
							UI.elements.content.mediatransformations.setItem (sorentoLib.mediaTransformation.load (item.id));
										
							modal.dispose ();		
						};
										
		// SET	
		var set =		function ()
						{
							modal.getUIElement ("title").setAttribute ("value", attributes.current.title);
							modal.getUIElement ("mimetypes").setItems (attributes.current.mimetypes);
							modal.getUIElement ("script").setAttribute ("value", attributes.current.script);
						};
				
		// GET		
		var get = 		function ()
						{
							var item = {};
							item.id = attributes.current.id;
							item.title = modal.getUIElement ("title").getAttribute ("value");
							item.mimetypes = modal.getUIElement ("mimetypes").getItems ();
							item.script = modal.getUIElement ("script").getAttribute ("value");
							
							return item;								
						};
						
		var dispose =	function ()
						{
							modal.dispose ();
						};
						
		// ONCHANGE	
		var onChange =	function ()
						{							
							if ((sConsole.helpers.compareItems ({array1: attributes.current, array2: get ()})) && (modal.getUIElement ("title").getAttribute ("value") != ""))
							{
								modal.getUIElement ("save").setAttribute ("disabled", false);
							}
							else
							{
								modal.getUIElement ("save").setAttribute ("disabled", true);									
							}	
							
							if (modal.getUIElement ("mimetypes").getItem () != null)
							{
								modal.getUIElement ("mimetypeedit").setAttribute ("disabled", false);
								modal.getUIElement ("mimetyperemove").setAttribute ("disabled", false);
							}	
							else
							{
								modal.getUIElement ("mimetypeedit").setAttribute ("disabled", true);
								modal.getUIElement ("mimetyperemove").setAttribute ("disabled", true);
							}
						};							
	
		// INIT
		var modal = new sConsole.modal.window ({SUIXML: "<%Write (SorentoLib.Services.Config.GetString ("sconsole", "url"))%>xml/media/mediatransformation_edit.xml"});
		modal.getUIElement ("save").setAttribute ("onClick", save);
		modal.getUIElement ("close").setAttribute ("onClick", dispose);		
						
		modal.getUIElement ("title").setAttribute ("onChange", onChange);
		modal.getUIElement ("mimetypes").setAttribute ("onChange", onChange);
		modal.getUIElement ("mimetypeadd").setAttribute ("onClick", mimetype.add);
		modal.getUIElement ("mimetypeedit").setAttribute ("onClick", mimetype.edit);
		modal.getUIElement ("mimetyperemove").setAttribute ("onClick", mimetype.remove);		
		modal.getUIElement ("script").setAttribute ("onChange", onChange);
						
		// SET
		set ();		
		
		// SHOW
		modal.show ();		
	},
	
	// DELETE
	delete : function ()
	{
		var action =	function (result)
						{
							if (result == 1)
							{														
								if (sorentoLib.mediaTransformation.delete (UI.elements.content.mediatransformations.getItem ().id))
								{
									UI.elements.content.mediatransformations.removeItem ();
								}										
							}
						};
	
		sConsole.modal.question ({title: "Delete mediatransformation", text: "Do you really want to delete this mediatransformation ?", buttonLabel: "Yes|No", onDone: action});
	}	
}





