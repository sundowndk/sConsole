// <script>
// #######################################################################################################################################
// # GLOBAL
// #######################################################################################################################################		
var mediatransformation =
{	
	// CREATE
	create : function (attributes)
	{
		if (!attributes)
			attributes = new Array ();
	
		// CREATE			
		var create =	function ()
						{
							// SHOW BUSY
							modal.busy ();
							
							setTimeout (function () 
										{			
											get ();

											sorentoLib.mediaTransformation.save (attributes.current);
																																											
											mediatransformation.edit ({current: attributes.current, row: UI.elements.content.mediatransformations.addItem (attributes.current)});
																						
											dispose ();
										}, 150);																						
						};			

		// DISPOSE
		var dispose =	function ()
						{
							modal.getUIElement ("create").setAttribute ("disabled", true);
							modal.getUIElement ("close").setAttribute ("disabled", true);		
							modal.dispose ();							
							modal = null;
						};

		// SET
		var set =		function ()
						{
							attributes.current = sorentoLib.mediaTransformation.new ();
							attributes.checksum = sConsole.helpers.arrayChecksum (attributes.current);						
							onChange ();
						};
										
		// GET
		var get =		function ()
						{
							attributes.current.title = modal.getUIElement ("title").getAttribute ("value");							
						};
										
		// ONINIT
		var onInit =	function ()
						{
						
							modal.getUIElement ("title").setAttribute ("onChange", onChange);		
		
							modal.getUIElement ("create").setAttribute ("onClick", create);
							modal.getUIElement ("close").setAttribute ("onClick", modal.dispose);		
		
							// SET
							set ();
		
							// SHOW
							modal.show ();		
						
						};
						
		// ONCHANGE
		var onChange =	function ()
						{
							get ();
						
							if ((sConsole.helpers.arrayChecksum (attributes.current) != attributes.checksum) && (modal.getUIElement ("title").getAttribute ("value") != ""))
							{
								modal.getUIElement ("create").setAttribute ("disabled", false);
							}
							else
							{
								modal.getUIElement ("create").setAttribute ("disabled", true);
							}										
						};
						
		// INIT
		var modal = new sConsole.modal.window ({width: "content", height: "content", busy: true, SUIXML: "<%Write (SorentoLib.Services.Config.GetString ("sconsole", "url"))%>xml/media/mediatransformation_create.xml", onInit: onInit});	
	},

	// EDIT
	edit : function (attributes)
	{				
		<%Include ("index_mediatransformation_mimetype_script.stpl")%>	
	
		if (!attributes) 
			attributes = new Array ();
				
		if (!attributes.current)
		{
			attributes.row = UI.elements.content.mediatransformations.getItemRow ();			
			attributes.current = sorentoLib.mediaTransformation.load (UI.elements.content.mediatransformations.getItem ().id);		
		}					
							
		// SAVE
		var save = 		function ()
						{
						// SHOW BUSY
							modal.busy ();
							
							setTimeout (function () 
										{																					
											get ();
																																	
											sorentoLib.mediaTransformation.save (attributes.current);	
											
											UI.elements.content.mediatransformations.setItem (attributes.current, attributes.row);
														
											checksum = sConsole.helpers.arrayChecksum (attributes.current);
							
											onChange ();																										
																					
											modal.busy ();
										}, 150);												
						};
						
		// DISPOSE
		var dispose =	function ()
						{
							modal.getUIElement ("save").setAttribute ("disabled", true);
							modal.getUIElement ("close").setAttribute ("disabled", true);		
							modal.dispose ();							
							modal = null;
						};																				
																		
		// SET	
		var set =		function ()
						{
							modal.getUIElement ("title").setAttribute ("value", attributes.current.title);
							modal.getUIElement ("mimetypes").setItems (attributes.current.mimetypes);
							modal.getUIElement ("script").setAttribute ("value", attributes.current.script);
							
							get ();
							
							checksum = sConsole.helpers.arrayChecksum (attributes.current);
						};
				
		// GET		
		var get = 		function ()
						{
							attributes.current.title = modal.getUIElement ("title").getAttribute ("value");
							attributes.current.mimetypes = modal.getUIElement ("mimetypes").getItems ();
							attributes.current.script = modal.getUIElement ("script").getAttribute ("value");
						};													
						
		// ONINIT						
		var onInit =	function ()
						{												
							modal.getUIElement ("title").setAttribute ("onChange", onChange);
							modal.getUIElement ("mimetypes").setAttribute ("onChange", onChange);
							modal.getUIElement ("mimetypes").setAttribute ("onDoubleClick", mimetype.edit);
							modal.getUIElement ("mimetypeadd").setAttribute ("onClick", mimetype.add);
							modal.getUIElement ("mimetypeedit").setAttribute ("onClick", mimetype.edit);
							modal.getUIElement ("mimetyperemove").setAttribute ("onClick", mimetype.remove);		
							modal.getUIElement ("script").setAttribute ("onChange", onChange);
							
							modal.getUIElement ("save").setAttribute ("onClick", save);
							modal.getUIElement ("close").setAttribute ("onClick", dispose);		
						
							// SET
							set ();
						
							// SHOW
							modal.show ();								
						};
											
		// ONCHANGE	
		var onChange =	function ()
						{							
							get ();
														
							if ((sConsole.helpers.arrayChecksum (attributes.current) != checksum) && (modal.getUIElement ("title").getAttribute ("value") != ""))						
							{
								modal.getUIElement ("save").setAttribute ("disabled", false);
							}
							else
							{
								modal.getUIElement ("save").setAttribute ("disabled", true);									
							}	
							
							if (modal.getUIElement ("mimetypes").getItem () != null)
							{
								modal.getUIElement ("mimetypeedit").setAttribute ("disabled", false);
								modal.getUIElement ("mimetyperemove").setAttribute ("disabled", false);
							}	
							else
							{
								modal.getUIElement ("mimetypeedit").setAttribute ("disabled", true);
								modal.getUIElement ("mimetyperemove").setAttribute ("disabled", true);
							}
						};							
	
		// INIT
		var modal = new sConsole.modal.window ({dimensions: "auto", busy: true, SUIXML: "<%Write (SorentoLib.Services.Config.GetString ("sconsole", "url"))%>xml/media/mediatransformation_edit.xml", onInit: onInit});
	},
	
	// DELETE
	delete : function ()
	{
		var action =	function (result)
						{
							if (result == 1)
							{														
								if (sorentoLib.mediaTransformation.delete (UI.elements.content.mediatransformations.getItem ().id))
								{
									UI.elements.content.mediatransformations.removeItem ();
								}										
							}
						};
	
		sConsole.modal.question ({title: "Delete mediatransformation", text: "Do you really want to delete this mediatransformation ?", button1Label: "Yes", button2Label: "No", onDone: action});
	}	
}





